const mongoose = require('mongoose');

// Connect to MongoDB
mongoose.connect('mongodb+srv://kirags123:8qPEa8KTKBEh2bss@cluster0.f3qlbuo.mongodb.net/course_selling_app');

// Define schemas
const AdminSchema = new mongoose.Schema({
    // Schema definition here
    username: String,
    password: String
});

const UserSchema = new mongoose.Schema({
    // Schema definition here
    username: String,
    password: String,
    purchasedCourses: [{    //to understand this, refer below explainition.
        type: mongoose.Schema.Types.ObjectId,
        ref: 'Course'
    }]
});

const CourseSchema = new mongoose.Schema({
    // Schema definition here
    title: String,
    description: String,
    imageLink: String,
    price: Number
});

const Admin = mongoose.model('Admin', AdminSchema);
const User = mongoose.model('User', UserSchema);
const Course = mongoose.model('Course', CourseSchema);

module.exports = {
    Admin,
    User,
    Course
}









// --------------------------------------------------------
// purchasedCourses: [{   
//     type: mongoose.Schema.Types.ObjectId,
//     ref: 'Course'
// }]

// In the provided Mongoose schema snippet, the purchasedCourses field is defined as an array of objects. 
// Each object in this array represents a reference to another document in the database, specifically 
// documents of the Course model.

// Let's break down the code :

// 1. purchasedCourses: This is a field within the UserSchema representing the courses purchased by a user.

// 2. []: This indicates that purchasedCourses is an array. Users can purchase multiple courses, so storing 
//        them as an array allows for this flexibility.

// 3. type: mongoose.Schema.Types.ObjectId: This specifies the type of data that each element in the 
//          purchasedCourses array should be. In this case, it's an ObjectId, which is the unique identifier 
//          generated by MongoDB for each document in a collection.

// 4. ref: 'Course': This indicates the model to which each ObjectId in the purchasedCourses array refers. 
//          In this case, it refers to the Course model. By setting this reference, Mongoose knows that each 
//          ObjectId in the array corresponds to a document in the Course collection. This enables Mongoose to 
//          automatically populate the purchasedCourses array with the actual Course documents when queried, 
//          rather than just returning the ObjectIds.

// In summary, the purchasedCourses field in the UserSchema is an array of ObjectIds, each of which references a 
// document in the Course collection. This structure allows for a many-to-many relationship between users and 
// courses, where a user can purchase multiple courses, and each course can be purchased by multiple users.
